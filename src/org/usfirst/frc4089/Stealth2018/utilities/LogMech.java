// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4089.Stealth2018.utilities;

import org.usfirst.frc4089.Stealth2018.RobotMap;



/**
 *
 */
public class LogMech {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	static int counter = 0;

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
  public static void logMe(){
    	
    	//System.out.print("Left Encoder: ");
    	//System.out.print(-RobotMap.driveLeftMotor1.getEncPosition());
    	//System.out.print(" Right Encoder ");
    	//System.out.println(RobotMap.driveRightMotor1.getEncPosition());
    	//System.out.print(" Right Encoder Velocity ");
    	//System.out.print(RobotMap.driveRightMotor1.getEncVelocity());
    	//System.out.print(" Left Encoder Velocity ");
    	//System.out.println(RobotMap.driveLeftMotor1.getEncVelocity());
    	//System.out.println("Angle" + RobotMap.digitalSPIGyro.getAngle());
    	//System.out.print("Rate" + RobotMap.digitalSPIGyro.getRate());
    	//System.out.print(" Right Encoder Pulse Width Velocity ");
    	//System.out.print(RobotMap.driveRightMotor1.getPulseWidthVelocity());
    	//System.out.print(" Left Encoder Pulse Width Velocity ");
    	//System.out.println(RobotMap.driveLeftMotor1.getPulseWidthVelocity());
    	
    	if(--counter <= 0){
			counter = 12;
			/* every 8 loops, print our columns */
			
			System.out.format("%-9s\t", "L Enc Pos");
			System.out.format("%-9s\t", "L Enc Pos IN");
			System.out.format("%-9s\t", "L Enc Turns");
			System.out.format("%-9s\t", "R Enc Pos");
			System.out.format("%-9s\t", "R Enc Vel");
			System.out.format("%-9s\t", "L Enc Vel");
			System.out.format("%-9s\t", "Gyro Ang");
			System.out.format("%-9s\t", "Gyro Rate");
			System.out.format("%-9s\t", "R Enc PW Vel");
			System.out.format("%-9s\t", "L Enc PW Vel");

			System.out.format("\n");
		}
		/* every loop, print our values */
		System.out.format("%-9s\t", RobotMap.driveSRXDriveLR.getActiveTrajectoryPosition());
		System.out.format("%-9s\t", DriveMath.calcDist(RobotMap.driveSRXDriveLR.getActiveTrajectoryPosition(), "IN"));
		System.out.format("%-9s\t", DriveMath.calcTurns(RobotMap.driveSRXDriveLR.getActiveTrajectoryPosition()));
		System.out.format("%-9s\t", RobotMap.driveSRXDriveLR.getActiveTrajectoryPosition());
		System.out.format("%-9s\t", RobotMap.driveSRXDriveLR.getActiveTrajectoryVelocity());
		
		//System.out.format("%-9s\t", RobotMap.digitalSPIGyro.getAngle());
		//sSystem.out.format("%-9s\t", RobotMap.digitalSPIGyro.getRate());


		System.out.format("\n");
    }
    
}
